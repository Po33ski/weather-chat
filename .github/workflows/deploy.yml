name: Deploy Weather Center Chat

on:
  push:
    branches: [ deploy ]
  pull_request:
    branches: [ deploy ]

env:
  PYTHON_VERSION: '3.12'
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install uv
      run: pip install uv
    
    - name: Install Python dependencies
      run: |
        cd backend
        uv sync
    
    - name: Install Node.js dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run backend tests
      run: |
        cd backend
        uv run python -m pytest tests/ -v
      env:
        VISUAL_CROSSING_API_KEY: ${{ secrets.VISUAL_CROSSING_API_KEY }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
    
    - name: Run frontend tests
      run: |
        cd frontend
        npm run test
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
      env:
        NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        NEXT_PUBLIC_GOOGLE_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/deploy'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Render (Manual)
      run: |
        echo "Deployment to Render should be configured in Render dashboard"
        echo "Environment variables are available in GitHub Secrets:"
        echo ""
        echo "Backend variables:"
        echo "- VISUAL_CROSSING_API_KEY: ${{ secrets.VISUAL_CROSSING_API_KEY != '' }}"
        echo "- GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY != '' }}"
        echo ""
        echo "Frontend variables:"
        echo "- NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL != '' }}"
        echo "- NEXT_PUBLIC_GOOGLE_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID != '' }}"
    
    - name: Notify deployment status
      run: |
        echo "âœ… Tests passed and deployment is ready"
        echo "ðŸ“‹ Next steps:"
        echo "1. Go to Render.com dashboard"
        echo "2. Create new Web Service from this repository"
        echo "3. Use Docker deployment with render.yaml"
        echo "4. Set environment variables:"
        echo "   Backend:"
        echo "   - VISUAL_CROSSING_API_KEY"
        echo "   - GOOGLE_API_KEY"
        echo "   Frontend:"
        echo "   - NEXT_PUBLIC_API_URL"
        echo "   - NEXT_PUBLIC_GOOGLE_CLIENT_ID"
        echo "5. Deploy!" 