name: Deploy Weather Center Chat

on:
  push:
    branches: [ deploy ]


env:
  PYTHON_VERSION: '3.12'
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install uv (official installer)
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Sync backend dependencies with uv
      run: |
        cd backend
        uv sync

    - name: Start FastAPI backend with uv (background)
      run: |
        cd backend
        nohup uv run python -m uvicorn api.main:app --host 127.0.0.1 --port 8000 > server.log 2>&1 &
      env:
        VISUAL_CROSSING_API_KEY: ${{ secrets.VISUAL_CROSSING_API_KEY }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}

    - name: Wait for backend health
      run: |
        for i in {1..60}; do
          if curl -fsS http://127.0.0.1:8000/health >/dev/null; then echo "backend up"; exit 0; fi
          sleep 1
        done
        echo "backend not ready"; echo "--- server.log ---"; cat backend/server.log || true; exit 1

    - name: Run test_local.py via uv (uses backend env)
      run: |
        uv run --directory backend python ../test_local.py
      env:
        VISUAL_CROSSING_API_KEY: ${{ secrets.VISUAL_CROSSING_API_KEY }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/deploy' 
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Render (Manual)
      run: |
        echo "Deployment to Render should be configured in Render dashboard"
        echo "Environment variables are available in GitHub Secrets:"
        echo ""
        echo "Backend variables:"
        echo "- VISUAL_CROSSING_API_KEY: ${{ secrets.VISUAL_CROSSING_API_KEY != '' }}"
        echo "- GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY != '' }}"
        echo ""
        echo "Frontend variables:"
        echo "- NEXT_PUBLIC_GOOGLE_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID != '' }}"
    
    - name: Notify deployment status
      run: |
        echo "âœ… Tests passed and deployment is ready"
        echo "ðŸ“‹ Next steps:"
        echo "1. Go to Render.com dashboard"
        echo "2. Create new Web Service from this repository"
        echo "3. Use Docker deployment with render.yaml"
        echo "4. Set environment variables:"
        echo "   Backend:"
        echo "   - VISUAL_CROSSING_API_KEY"
        echo "   - GOOGLE_API_KEY"
        echo "   Frontend:"
        echo "   - NEXT_PUBLIC_GOOGLE_CLIENT_ID"
        echo "5. Deploy!" 